const axios = require('axios');

async function checkStrapiStatus() {
    const API_URL = 'http://localhost:1337';
    
    try {
        console.log('üîç Checking Strapi Status...\n');

        // ÿßÿÆÿ™ÿ®ÿßÿ± 1: ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿ£ŸÜ Strapi ŸäÿπŸÖŸÑ
        console.log('1. Checking if Strapi is running...');
        const healthCheck = await axios.get(`${API_URL}/_health`).catch(() => {
            // ÿ•ÿ∞ÿß ŸÅÿ¥ŸÑ health checkÿå ÿ¨ÿ±ÿ® endpoint ÿ¢ÿÆÿ±
            return axios.get(`${API_URL}/admin`);
        }).catch(() => {
            // ÿ•ÿ∞ÿß ŸÅÿ¥ŸÑ adminÿå ÿ¨ÿ±ÿ® API ŸÖÿ®ÿßÿ¥ÿ±ÿ©
            return axios.get(`${API_URL}/api/blog-articles`);
        });
        
        console.log(`‚úÖ Strapi is running! Status: ${healthCheck.status}`);

        // ÿßÿÆÿ™ÿ®ÿßÿ± 2: ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑÿµŸÑÿßÿ≠Ÿäÿßÿ™
        console.log('\n2. Checking API permissions...');
        try {
            const apiResponse = await axios.get(`${API_URL}/api/blog-articles`);
            console.log(`‚úÖ API accessible! Found ${apiResponse.data.data?.length || 0} articles`);
            
            if (apiResponse.data.data && apiResponse.data.data.length > 0) {
                const firstArticle = apiResponse.data.data[0];
                console.log(`üìÑ Sample article: ID ${firstArticle.id}, Title: "${firstArticle.title}"`);
                
                // ÿßÿÆÿ™ÿ®ÿßÿ± findOne
                console.log(`\n3. Testing findOne with article ${firstArticle.id}...`);
                try {
                    const oneResponse = await axios.get(`${API_URL}/api/blog-articles/${firstArticle.id}`);
                    console.log(`‚úÖ FindOne works! Article: "${oneResponse.data.data.title}"`);
                    
                    console.log(`\nüéâ ALL CHECKS PASSED!`);
                    console.log(`üìã Summary:`);
                    console.log(`   - Strapi: ‚úÖ Running`);
                    console.log(`   - API: ‚úÖ Accessible`);
                    console.log(`   - Articles: ‚úÖ ${apiResponse.data.data.length} found`);
                    console.log(`   - FindOne: ‚úÖ Working`);
                    console.log(`\nüîó Test URLs:`);
                    console.log(`   - API: ${API_URL}/api/blog-articles/${firstArticle.id}?populate=*&locale=en`);
                    console.log(`   - Frontend: http://localhost:3000/media/${firstArticle.id}`);
                    
                } catch (oneError) {
                    console.log(`‚ùå FindOne failed: ${oneError.response?.status} ${oneError.message}`);
                    if (oneError.response?.data) {
                        console.log(`   Details:`, oneError.response.data);
                    }
                }
                
            } else {
                console.log(`‚ö†Ô∏è No articles found. Create articles in Strapi admin:`);
                console.log(`   Go to: ${API_URL}/admin`);
            }
            
        } catch (apiError) {
            if (apiError.response?.status === 403) {
                console.log(`‚ùå API access denied (403 Forbidden)`);
                console.log(`üí° Fix: Enable permissions in Strapi admin`);
                console.log(`   1. Go to: ${API_URL}/admin`);
                console.log(`   2. Settings ‚Üí Roles ‚Üí Public`);
                console.log(`   3. Enable "find" and "findOne" for Blog-article`);
            } else {
                console.log(`‚ùå API error: ${apiError.response?.status} ${apiError.message}`);
            }
        }

    } catch (error) {
        if (error.code === 'ECONNREFUSED') {
            console.log('‚ùå Strapi is not running!');
            console.log('üí° Start Strapi with: npm run develop');
        } else {
            console.log(`‚ùå Connection error: ${error.message}`);
        }
    }
}

checkStrapiStatus();
